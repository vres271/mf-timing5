events {}
http {
  lua_package_path "/usr/local/openresty/lualib/?.lua;;";
  server {
    listen 80;

    location / {
      proxy_pass http://frontend:80;
    }

    location /api {

      access_by_lua_block {
          local jwt = require("resty.jwt")
          local auth_header = ngx.var.http_Authorization
          if not auth_header then
              ngx.status = ngx.HTTP_UNAUTHORIZED
              ngx.header["Content-Type"] = "application/json"  -- Устанавливаем заголовок Content-Type
              ngx.say('{"error": "Missing Authorization header"}')  -- Возвращаем JSON
              return ngx.exit(ngx.HTTP_UNAUTHORIZED)
          end

          local token = string.match(auth_header, "Bearer%s+(.+)")
          if not token then
              ngx.status = ngx.HTTP_UNAUTHORIZED
              ngx.header["Content-Type"] = "application/json"  -- Устанавливаем заголовок Content-Type
              ngx.say('{"error": "Invalid token format"}')  -- Возвращаем JSON
              return ngx.exit(ngx.HTTP_UNAUTHORIZED)
          end

          local secret_key_file = "/etc/nginx/secrets/jwt_secret.key"
          local file = io.open(secret_key_file, "r")
          if not file then
              ngx.status = ngx.HTTP_INTERNAL_SERVER_ERROR
              ngx.header["Content-Type"] = "application/json"  -- Устанавливаем заголовок Content-Type
              ngx.say('{"error": "Failed to read JWT secret key file"}')  -- Возвращаем JSON
              return ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)
          end
          local secret_key = file:read("*a"):gsub("%s+", "")  -- Убираем лишние пробелы и переводы строк
          file:close()

          -- Проверка токена
          local jwt_obj = jwt:verify(secret_key, token)
          if not jwt_obj.verified then
              ngx.status = ngx.HTTP_UNAUTHORIZED
              ngx.header["Content-Type"] = "application/json"  -- Устанавливаем заголовок Content-Type
              ngx.say('{"error": "Invalid token", "details": "' .. jwt_obj.reason .. '"}')  -- Возвращаем JSON с деталями ошибки
              return ngx.exit(ngx.HTTP_UNAUTHORIZED)
          end

          ngx.req.set_header("X-User", jwt_obj.payload.sub)
          ngx.req.set_header("X-Roles", table.concat(jwt_obj.payload.roles, ","))
      }

      rewrite ^/api/(.*) /$1 break;
      proxy_pass http://backend:3000;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }
}