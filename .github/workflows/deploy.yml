name: Deploy Application

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  SSH_HOST: ${{ secrets.SSH_HOST }}
  SSH_USER: ${{ secrets.SSH_USER }}
  SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  PROJECT_DIR: /home/deploy/app/mft5

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install SSH Key
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Copy files to server
      run: |
        rsync -avz \
          --exclude .git \
          -e "ssh -o StrictHostKeyChecking=no" \
          ./ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ env.PROJECT_DIR }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: Linux-buildx-${{ github.sha }}
        restore-keys: |
          Linux-buildx-

    - name: Deploy Application
      timeout-minutes: 60
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd ${{ env.PROJECT_DIR }}

          # Останавливаем существующие контейнеры
          docker-compose down

          # Активируем Docker Buildx
          docker buildx create --use

          # Сборка образов с использованием buildx и кэшированием
          docker buildx build \
            --cache-from type=local,src=/tmp/.buildx-cache \
            --cache-to type=local,dest=/tmp/.buildx-cache-new \
            -t myapp_backend:latest ./backend

          docker buildx build \
            --cache-from type=local,src=/tmp/.buildx-cache \
            --cache-to type=local,dest=/tmp/.buildx-cache-new \
            -t myapp_frontend:latest ./frontend

          docker buildx build \
            --cache-from type=local,src=/tmp/.buildx-cache \
            --cache-to type=local,dest=/tmp/.buildx-cache-new \
            -t myapp_nginx:latest ./nginx

          # Запуск контейнеров через docker-compose
          docker-compose up -d

          # Очистка неиспользуемых объектов Docker
          docker system prune -f

    - name: Save Docker layers cache
      if: always()
      run: |
        mkdir -p /tmp/.buildx-cache-new
        docker buildx build \
          --cache-to type=local,dest=/tmp/.buildx-cache-new \
          -t myapp_backend:latest ./backend

        docker buildx build \
          --cache-to type=local,dest=/tmp/.buildx-cache-new \
          -t myapp_frontend:latest ./frontend

        docker buildx build \
          --cache-to type=local,dest=/tmp/.buildx-cache-new \
          -t myapp_nginx:latest ./nginx